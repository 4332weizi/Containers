name: Build and Push Docker Images

on:
  push:
    branches:
      - main
    paths:
      - 'nginx/**'
  workflow_dispatch:

jobs:
  build:
    name: Build ${{ matrix.name || 'Docker Image' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: nginx
            path: nginx
    concurrency:
      group: build-${{ matrix.name }}-${{ github.ref }}
      cancel-in-progress: true

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Read ARGS
        id: args
        run: |
          [ -f "${{ matrix.path }}/ARGS" ] || { echo "ARGS file not found"; exit 1; }
          while IFS='=' read -r key value; do
          # skip empty lines and comments
          if [[ -n "$key" && ! "$key" =~ ^# ]]; then
            echo "$key=$value" >> $GITHUB_OUTPUT
          fi
          done < "${{ matrix.path }}/ARGS"

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.path }}
          file: ${{ matrix.path }}/Dockerfile
          push: true
          provenance: false
          platforms: linux/amd64,linux/arm64
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/${{ matrix.name }}:buildcache
          cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/${{ matrix.name }}:buildcache,mode=max
          build-args: |
            $(printf "%s\n" ${{ toJSON(steps.args.outputs) }} | jq -r 'to_entries[] | "\(.key)=\(.value)"')
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ matrix.name }}:${{ steps.args.outputs.IMAGE_TAG }}
            ghcr.io/${{ github.repository_owner }}/${{ matrix.name }}:latest

      - name: Generate artifact attestation
        if: steps.build-and-push.outputs.digest != '' && github.event.repository.private == false
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ghcr.io/${{ github.repository_owner }}/${{ matrix.name }}
          subject-digest: ${{ steps.build-and-push.outputs.digest }}
          push-to-registry: true
          github-token: ${{ secrets.GITHUB_TOKEN }}